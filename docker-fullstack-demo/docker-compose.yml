version: "3.8"

services:
  # MySQL 서비스
  mysql:
    image: mysql:8.0
    container_name: blog-mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: blog_db
      MYSQL_USER: blog_user
      MYSQL_PASSWORD: blogpassword
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-authentication-plugin=mysql_native_password
      - --default-time-zone=+09:00
    volumes:
      - blog_mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - back-db-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "blog_user", "-pblogpassword"]
      timeout: 20s
      interval: 10s
      retries: 5
      start_period: 30s
    restart: unless-stopped

  # 백엔드 서비스
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: blog-backend
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=blog_db
      - DB_USER=blog_user
      - DB_PASSWORD=blogpassword
      - SERVER_PORT=8080
      - SHOW_SQL=false
      - LOG_LEVEL=INFO
      - JAVA_OPTS=-Dfile.encoding=UTF-8 -Duser.timezone=Asia/Seoul
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - front-back-network  # frontend와 통신 가능
      - back-db-network   # db와 통신 가능
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/posts/health"]
      timeout: 10s
      interval: 30s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # 프론트엔드 서비스
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: blog-frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - front-back-network  # 외부 접속용, backend와 연결 가능
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  blog_mysql_data:
    driver: local

networks:
  front-back-network:
    driver: bridge
  back-db-network:
    driver: bridge
    internal: true 
